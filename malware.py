import os
import time 
import hashlib #computing file hashes
import requests #download malicious data
import platform
from prettytable import PrettyTable

# Computes MD5, SHA1, and SHA256 hashes for a file
def compute_hashes(file_path): 
    hashers = {
        'md5': hashlib.md5(),
        'sha1': hashlib.sha1(),
        'sha256': hashlib.sha256()
    }
    with open(file_path, 'rb') as f: # Open file in binary mode
        while chunk := f.read(65536): # Read file in chunks
            for hasher in hashers.values():
                hasher.update(chunk)
    return {name: hasher.hexdigest() for name, hasher in hashers.items()}

def identify_malware(file_hashes, classification): # Identifies malware type based on hashes
    for hash_value in file_hashes.values():
        if hash_value in classification:
            return classification[hash_value]
    return "Unknown"

def scan_file(file_path, malicious_hashes, classification, table):
    file_hashes = compute_hashes(file_path)
    if any(hash_value in malicious_hashes for hash_value in file_hashes.values()):
        malware_type = identify_malware(file_hashes, classification) # Identify malware type
        table.add_row([file_path, malware_type]) # Add result to table
        os.system('cls' if platform.system() == 'Windows' else 'clear')
        print(table)

def scan_directory(directory, malicious_hashes, classification, table):
    count = 0
    for root, _, files in os.walk(directory):
        for file in files:
            try:
                scan_file(os.path.join(root, file), malicious_hashes, classification, table)
                count += 1
            except (PermissionError, KeyboardInterrupt):
                continue
    return count

# Download malicious hash list
def scan_malware(directories):
    url = "https://raw.githubusercontent.com/eminunal1453/Various-Malware-Hashes/main/hashes.txt"
    response = requests.get(url)
    malicious_hashes = set(response.text.splitlines())

# Define known malware types
    malware_types = {
        "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8": "Ransomware",
        "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855": "Trojan",
        "8754c2a98e3b9c86aa49d4a35b8835e5fc6d5e6f53d6bce44a7f8db9c524de7a": "Virus",
        "3dc3c3f1bce75e029b1c7a8db9a20dfb2c6f68c925b1898db0d49f7a1d0520a6": "Spyware",
        "d301f9c47a8dd8331c4597feefcb056d08e3a3b4c4f4d03f9c1436a1a5f5b6b5": "Adware",
        "1e8a9f5127d527fb9c97d7fd8be2b883cc7f75e20e437d7b19db69b42c42220c": "Worm"
    }

    table = PrettyTable(["File Path", "Malware Type"])
    start_time = time.time()

    total_files = 0
    for directory in directories:
        total_files += scan_directory(directory, malicious_hashes, malware_types, table)

    print(table)
    print(f"\nTotal files scanned: {total_files}")
    print(f"Runtime: {time.time() - start_time:.2f} seconds")
